worker_processes  1;
pid /var/run/nginx.pid;
error_log /dev/stdout info;
daemon off;

events {
    worker_connections 1024;
}

http {
    include             mime.types;
    default_type        application/octet-stream;
    sendfile            on;
    keepalive_timeout   65;
    proxy_read_timeout  1200;
    gzip                on;
    gzip_disable        "msie6";

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Ingress
    server {
        listen 8099 default_server;

        allow   172.30.32.2;
        deny    all;

        server_name _;
        access_log /dev/stdout combined;

        client_max_body_size 4G;
        keepalive_timeout 5;

        location / {
            # root /usr/share/www;
            # index wmbusmeters.html;
            proxy_pass              http://127.0.0.1:5000;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_set_header X-NginX-Proxy true;

            sub_filter_once off;
            sub_filter_types *;
            
            # Block attempt to probe subnets
            sub_filter '} else if (state === STATE_CHECKSUBNETS) {\n        if' '} else if (state === STATE_CHECKSUBNETS) { if (true) {needCheckSubnets = false;state = STATE_IDLE;queueStateAction(E_TIMEOUT, 1000);} else if';

            # Block attempt at loading gateway api by adding port
            sub_filter 'if (ip.indexOf(\':\') === -1) // no port was specified' 'if (false)';
        }
    }
}
